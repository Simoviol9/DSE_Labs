|device_digitFlashing
CLOCK_50 => digitFlashing:U1.IN1
KEY[0] => digitFlashing:U1.CLR
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
HEX0[6] <= hexDecoder:DEC.OUT1[6]
HEX0[5] <= hexDecoder:DEC.OUT1[5]
HEX0[4] <= hexDecoder:DEC.OUT1[4]
HEX0[3] <= hexDecoder:DEC.OUT1[3]
HEX0[2] <= hexDecoder:DEC.OUT1[2]
HEX0[1] <= hexDecoder:DEC.OUT1[1]
HEX0[0] <= hexDecoder:DEC.OUT1[0]


|device_digitFlashing|digitFlashing:U1
IN1 => moduloCounter:MOD50M_26BIT_CNT.CLK
IN1 => moduloCounter:MOD10_4BIT_CNT.CLK
CLR => moduloCounter:MOD50M_26BIT_CNT.CLR
CLR => moduloCounter:MOD10_4BIT_CNT.CLR
OUT1[0] <= moduloCounter:MOD10_4BIT_CNT.COUNT[0]
OUT1[1] <= moduloCounter:MOD10_4BIT_CNT.COUNT[1]
OUT1[2] <= moduloCounter:MOD10_4BIT_CNT.COUNT[2]
OUT1[3] <= moduloCounter:MOD10_4BIT_CNT.COUNT[3]


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT
EN => elemCounter:CNT.prev_Q
EN => elemCounter:CNT.prev_A
CLK => elemCounter:CNT.CLK
CLK => elemCounter:cnt_generate:1:CNT.CLK
CLK => elemCounter:cnt_generate:2:CNT.CLK
CLK => elemCounter:cnt_generate:3:CNT.CLK
CLK => elemCounter:cnt_generate:4:CNT.CLK
CLK => elemCounter:cnt_generate:5:CNT.CLK
CLK => elemCounter:cnt_generate:6:CNT.CLK
CLK => elemCounter:cnt_generate:7:CNT.CLK
CLK => elemCounter:cnt_generate:8:CNT.CLK
CLK => elemCounter:cnt_generate:9:CNT.CLK
CLK => elemCounter:cnt_generate:10:CNT.CLK
CLK => elemCounter:cnt_generate:11:CNT.CLK
CLK => elemCounter:cnt_generate:12:CNT.CLK
CLK => elemCounter:cnt_generate:13:CNT.CLK
CLK => elemCounter:cnt_generate:14:CNT.CLK
CLK => elemCounter:cnt_generate:15:CNT.CLK
CLK => elemCounter:cnt_generate:16:CNT.CLK
CLK => elemCounter:cnt_generate:17:CNT.CLK
CLK => elemCounter:cnt_generate:18:CNT.CLK
CLK => elemCounter:cnt_generate:19:CNT.CLK
CLK => elemCounter:cnt_generate:20:CNT.CLK
CLK => elemCounter:cnt_generate:21:CNT.CLK
CLK => elemCounter:cnt_generate:22:CNT.CLK
CLK => elemCounter:cnt_generate:23:CNT.CLK
CLK => elemCounter:cnt_generate:24:CNT.CLK
CLK => elemCounter:cnt_generate:25:CNT.CLK
CLR => elemCounter:CNT.CLR
CLR => elemCounter:cnt_generate:1:CNT.CLR
CLR => elemCounter:cnt_generate:2:CNT.CLR
CLR => elemCounter:cnt_generate:3:CNT.CLR
CLR => elemCounter:cnt_generate:4:CNT.CLR
CLR => elemCounter:cnt_generate:5:CNT.CLR
CLR => elemCounter:cnt_generate:6:CNT.CLR
CLR => elemCounter:cnt_generate:7:CNT.CLR
CLR => elemCounter:cnt_generate:8:CNT.CLR
CLR => elemCounter:cnt_generate:9:CNT.CLR
CLR => elemCounter:cnt_generate:10:CNT.CLR
CLR => elemCounter:cnt_generate:11:CNT.CLR
CLR => elemCounter:cnt_generate:12:CNT.CLR
CLR => elemCounter:cnt_generate:13:CNT.CLR
CLR => elemCounter:cnt_generate:14:CNT.CLR
CLR => elemCounter:cnt_generate:15:CNT.CLR
CLR => elemCounter:cnt_generate:16:CNT.CLR
CLR => elemCounter:cnt_generate:17:CNT.CLR
CLR => elemCounter:cnt_generate:18:CNT.CLR
CLR => elemCounter:cnt_generate:19:CNT.CLR
CLR => elemCounter:cnt_generate:20:CNT.CLR
CLR => elemCounter:cnt_generate:21:CNT.CLR
CLR => elemCounter:cnt_generate:22:CNT.CLR
CLR => elemCounter:cnt_generate:23:CNT.CLR
CLR => elemCounter:cnt_generate:24:CNT.CLR
CLR => elemCounter:cnt_generate:25:CNT.CLR
COUNT[0] <= elemCounter:CNT.next_Q
COUNT[1] <= elemCounter:cnt_generate:1:CNT.next_Q
COUNT[2] <= elemCounter:cnt_generate:2:CNT.next_Q
COUNT[3] <= elemCounter:cnt_generate:3:CNT.next_Q
COUNT[4] <= elemCounter:cnt_generate:4:CNT.next_Q
COUNT[5] <= elemCounter:cnt_generate:5:CNT.next_Q
COUNT[6] <= elemCounter:cnt_generate:6:CNT.next_Q
COUNT[7] <= elemCounter:cnt_generate:7:CNT.next_Q
COUNT[8] <= elemCounter:cnt_generate:8:CNT.next_Q
COUNT[9] <= elemCounter:cnt_generate:9:CNT.next_Q
COUNT[10] <= elemCounter:cnt_generate:10:CNT.next_Q
COUNT[11] <= elemCounter:cnt_generate:11:CNT.next_Q
COUNT[12] <= elemCounter:cnt_generate:12:CNT.next_Q
COUNT[13] <= elemCounter:cnt_generate:13:CNT.next_Q
COUNT[14] <= elemCounter:cnt_generate:14:CNT.next_Q
COUNT[15] <= elemCounter:cnt_generate:15:CNT.next_Q
COUNT[16] <= elemCounter:cnt_generate:16:CNT.next_Q
COUNT[17] <= elemCounter:cnt_generate:17:CNT.next_Q
COUNT[18] <= elemCounter:cnt_generate:18:CNT.next_Q
COUNT[19] <= elemCounter:cnt_generate:19:CNT.next_Q
COUNT[20] <= elemCounter:cnt_generate:20:CNT.next_Q
COUNT[21] <= elemCounter:cnt_generate:21:CNT.next_Q
COUNT[22] <= elemCounter:cnt_generate:22:CNT.next_Q
COUNT[23] <= elemCounter:cnt_generate:23:CNT.next_Q
COUNT[24] <= elemCounter:cnt_generate:24:CNT.next_Q
COUNT[25] <= elemCounter:cnt_generate:25:CNT.next_Q


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:1:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:1:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:1:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:1:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:2:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:2:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:2:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:2:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:3:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:3:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:3:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:3:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:4:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:4:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:4:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:4:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:5:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:5:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:5:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:5:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:6:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:6:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:6:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:6:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:7:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:7:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:7:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:7:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:8:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:8:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:8:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:8:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:9:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:9:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:9:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:9:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:10:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:10:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:10:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:10:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:11:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:11:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:11:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:11:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:12:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:12:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:12:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:12:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:13:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:13:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:13:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:13:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:14:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:14:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:14:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:14:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:15:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:15:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:15:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:15:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:16:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:16:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:16:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:16:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:17:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:17:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:17:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:17:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:18:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:18:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:18:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:18:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:19:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:19:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:19:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:19:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:20:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:20:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:20:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:20:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:21:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:21:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:21:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:21:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:22:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:22:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:22:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:22:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:23:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:23:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:23:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:23:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:24:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:24:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:24:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:24:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:25:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:25:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:25:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|elemCounter:\cnt_generate:25:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD50M_26BIT_CNT|comparator:CMP
IN1[0] => Equal0.IN25
IN1[1] => Equal0.IN24
IN1[2] => Equal0.IN23
IN1[3] => Equal0.IN22
IN1[4] => Equal0.IN21
IN1[5] => Equal0.IN20
IN1[6] => Equal0.IN19
IN1[7] => Equal0.IN7
IN1[8] => Equal0.IN6
IN1[9] => Equal0.IN5
IN1[10] => Equal0.IN4
IN1[11] => Equal0.IN3
IN1[12] => Equal0.IN18
IN1[13] => Equal0.IN17
IN1[14] => Equal0.IN16
IN1[15] => Equal0.IN15
IN1[16] => Equal0.IN2
IN1[17] => Equal0.IN14
IN1[18] => Equal0.IN1
IN1[19] => Equal0.IN13
IN1[20] => Equal0.IN12
IN1[21] => Equal0.IN11
IN1[22] => Equal0.IN10
IN1[23] => Equal0.IN9
IN1[24] => Equal0.IN0
IN1[25] => Equal0.IN8
OUT1 <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|comparator:CMP
IN1[0] => Equal0.IN25
IN1[1] => Equal0.IN24
IN1[2] => Equal0.IN23
IN1[3] => Equal0.IN22
IN1[4] => Equal0.IN21
IN1[5] => Equal0.IN20
IN1[6] => Equal0.IN19
IN1[7] => Equal0.IN7
IN1[8] => Equal0.IN6
IN1[9] => Equal0.IN5
IN1[10] => Equal0.IN4
IN1[11] => Equal0.IN3
IN1[12] => Equal0.IN18
IN1[13] => Equal0.IN17
IN1[14] => Equal0.IN16
IN1[15] => Equal0.IN15
IN1[16] => Equal0.IN2
IN1[17] => Equal0.IN14
IN1[18] => Equal0.IN1
IN1[19] => Equal0.IN13
IN1[20] => Equal0.IN12
IN1[21] => Equal0.IN11
IN1[22] => Equal0.IN10
IN1[23] => Equal0.IN9
IN1[24] => Equal0.IN0
IN1[25] => Equal0.IN8
OUT1 <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT
EN => elemCounter:CNT.prev_Q
EN => elemCounter:CNT.prev_A
CLK => elemCounter:CNT.CLK
CLK => elemCounter:cnt_generate:1:CNT.CLK
CLK => elemCounter:cnt_generate:2:CNT.CLK
CLK => elemCounter:cnt_generate:3:CNT.CLK
CLR => elemCounter:CNT.CLR
CLR => elemCounter:cnt_generate:1:CNT.CLR
CLR => elemCounter:cnt_generate:2:CNT.CLR
CLR => elemCounter:cnt_generate:3:CNT.CLR
COUNT[0] <= elemCounter:CNT.next_Q
COUNT[1] <= elemCounter:cnt_generate:1:CNT.next_Q
COUNT[2] <= elemCounter:cnt_generate:2:CNT.next_Q
COUNT[3] <= elemCounter:cnt_generate:3:CNT.next_Q


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT|elemCounter:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT|elemCounter:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT|elemCounter:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT|elemCounter:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT|elemCounter:\cnt_generate:1:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT|elemCounter:\cnt_generate:1:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT|elemCounter:\cnt_generate:1:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT|elemCounter:\cnt_generate:1:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT|elemCounter:\cnt_generate:2:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT|elemCounter:\cnt_generate:2:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT|elemCounter:\cnt_generate:2:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT|elemCounter:\cnt_generate:2:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT|elemCounter:\cnt_generate:3:CNT
prev_Q => SEL0.IN0
prev_A => SEL0.IN1
next_Q <= flipflop:DFF.Q
next_A <= SEL0.DB_MAX_OUTPUT_PORT_TYPE
CLK => flipflop:DFF.Clock
CLR => flipflop:DFF.Resetn
LD => mux:MUX1.SEL
P => mux:MUX1.IN1


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT|elemCounter:\cnt_generate:3:CNT|flipflop:DFF
D => Q~reg0.DATAIN
Clock => Q~reg0.CLK
Resetn => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT|elemCounter:\cnt_generate:3:CNT|mux:MUX0
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT|elemCounter:\cnt_generate:3:CNT|mux:MUX1
IN0 => OUT1.IN0
IN1 => OUT1.IN0
SEL => OUT1.IN1
SEL => OUT1.IN1
OUT1 <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|digitFlashing:U1|moduloCounter:MOD10_4BIT_CNT|comparator:CMP
IN1[0] => Equal0.IN1
IN1[1] => Equal0.IN3
IN1[2] => Equal0.IN0
IN1[3] => Equal0.IN2
OUT1 <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|device_digitFlashing|hexDecoder:DEC
IN1[0] => Equal0.IN3
IN1[0] => Equal1.IN2
IN1[0] => Equal2.IN3
IN1[0] => Equal3.IN1
IN1[0] => Equal4.IN3
IN1[0] => Equal5.IN2
IN1[0] => Equal6.IN3
IN1[0] => Equal7.IN2
IN1[0] => Equal8.IN3
IN1[0] => Equal9.IN3
IN1[1] => Equal0.IN1
IN1[1] => Equal1.IN1
IN1[1] => Equal2.IN2
IN1[1] => Equal3.IN3
IN1[1] => Equal4.IN1
IN1[1] => Equal5.IN1
IN1[1] => Equal6.IN2
IN1[1] => Equal7.IN3
IN1[1] => Equal8.IN2
IN1[1] => Equal9.IN2
IN1[2] => Equal0.IN0
IN1[2] => Equal1.IN0
IN1[2] => Equal2.IN1
IN1[2] => Equal3.IN2
IN1[2] => Equal4.IN2
IN1[2] => Equal5.IN3
IN1[2] => Equal6.IN1
IN1[2] => Equal7.IN1
IN1[2] => Equal8.IN1
IN1[2] => Equal9.IN1
IN1[3] => Equal0.IN2
IN1[3] => Equal1.IN3
IN1[3] => Equal2.IN0
IN1[3] => Equal3.IN0
IN1[3] => Equal4.IN0
IN1[3] => Equal5.IN0
IN1[3] => Equal6.IN0
IN1[3] => Equal7.IN0
IN1[3] => Equal8.IN0
IN1[3] => Equal9.IN0
OUT1[6] <= OUT1.DB_MAX_OUTPUT_PORT_TYPE
OUT1[5] <= OUT1.DB_MAX_OUTPUT_PORT_TYPE
OUT1[4] <= OUT1.DB_MAX_OUTPUT_PORT_TYPE
OUT1[3] <= OUT1.DB_MAX_OUTPUT_PORT_TYPE
OUT1[2] <= OUT1.DB_MAX_OUTPUT_PORT_TYPE
OUT1[1] <= OUT1.DB_MAX_OUTPUT_PORT_TYPE
OUT1[0] <= OUT1.DB_MAX_OUTPUT_PORT_TYPE


